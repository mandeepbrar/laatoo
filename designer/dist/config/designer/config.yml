modulesrepo: "/modules"
modules:
  - filesystemstorage
  - mongodatabase
  - localauth
  - role
  - staticfileserver
  - reactwebrouter
  - reactmaterialkit
  - subentity
  - fontawesome
  - uicommon
  - reactpages
  - reactwebcommon
  - laatooviews
  - uicommon
  - authui
  - reactforms
  - designerdependencies
  - dashboardtheme
  - modulesrepository
  - designerui
  - reactapplication
  - shell
  - publicdirserver
  - publicfilesserver
  - dataadapter
  - dblogin
  - entity
  - user
  - ui
moduleinstances:
  filesystemstorage:
    module: filesystemstorage
  securityhandler.role:
    module: role
    settings:
      roledatafactory: mongodatabase
  mongodatabase:
    module: mongodatabase
    environment:
      mongoconnectionstring: mongo
      mongodatabase: PunjabiMehfil
  localauth:
    module: localauth
    settings:
      userobject: User
      dataservicefactory: mongodatabase
      defaultrole: Admin
  staticfileserver:
    module: staticfileserver
  router:
    module: reactwebrouter
  reactmaterialkit:
    module: reactmaterialkit
  subentity:
    module: subentity
  fontawesome:
    module: fontawesome
  uicommon:
    module: uicommon
  reactpages:
    module: reactpages
  reactwebcommon:
    module: reactwebcommon
  laatooviews:
    module: laatooviews
  authui:
    module: authui
  reactforms:
    module: reactforms
  dependencies:
    module: designerdependencies
  dashboard:
    module: dashboardtheme
    settings:
      application: designerapplication
      className: laatoodashboard
      infoBlock: InfoBlock
  designerapplication:
    module: reactapplication
    settings:
      application: designerapplication
      router: router
      uikit: reactmaterialkit
      theme: dashboard
  modulesrepository:
    module: modulesrepository
    settings:
      dataservicefactory: mongodatabase
  shell:
    module: shell
    settings:
      uiapplication: designerapplication
      uidependencies:
        react: ''
  designerui:
    module: designerui
  publicdirserver:
    module: publicdirserver
    settings:
      publicfilesdir: "/bin/publicdir"
      instance: publicdir
  publicfilesserver:
    module: publicfilesserver
    settings:
      filestoragedir: "/bin/appfiles"
      instance: appfiles
      files:
        services.conf.js:
          cache: 'true'
          path: scripts/services.conf.js
        index.html:
          cache: 'true'
          path: index.html
